TODOS
-----
1) Remove all class="form-control". They are never used. Were needed only when bootstrap form was involved. 

[Mahesh]:Ok good exercise for you. Please do it. DONE. 22d4ee6.b72e775

2) Move styling of img from html file to css. 
border="0" width="50 px" height="50 px" 

[Mahesh]:Ok good exercise for you. Please do it.

3) Is col attribute needed? If not remove it.
col="images/butterfly.jpg

[Mahesh]:Ok good exercise for you. Please do it.

--Do peer review and peer testing before checking in, for changes "1),2) and 3)"

4) Move Javascript to external js file.[DONE]

5) Remove all onclick from html file. Move to js file. Example as below,

current dora.html
------------------
<button class="form-control" id="doneId" onclick="validateInput()">Add To Image</button>
function validateInput() { blah blah blah }

dora.html
---------
<button id="doneId">Add To Image</button>

[Mahesh] Ok. do for this one case, we can then arive at a pattern.

External script file
---------------------
function validateInput() { blah blah blah }
$('#doneId').click(validateInput);

6) To get canvas using jQuery, use var canvas = $('#myCanvas').get(0) instead of  var canvas = document.getElementById("myCanvas");

Questions
----------
1) What is the use of object ContentCoordinate(x,y,content,fontSize)? 
Why a separate object when all it is doing is calling addletter(canvas, this.content, this.coordinate.x, this.coordinate.y,this.fontSize);} by passing canvas.

ContentCoordinate, is the object representing Content(text or numeric) at a particular coordinate (x,y). It has functions related to determining outer bounds of a given content(text or numeric).It takes care of all functionalities related to deciding what content should appear at what coordinate, accounting for outer bounds i.e. canvas and/or other ContentCoordinates present.

addLetter(canvas,content,x,y,fontsize) , blunt, it just adds a given content at a given coordinate, without considering any factors 

2) Anytime we need canvas, we can directly get it using DOM eg. var canvas = $('#myCanvas').get(0)

HTML DOM elements need to be inspected in one place, retrieved and then passed as javascript objects wherever necessary. Reading HTML DOM elements whenever and wherever, will increase the tight dependency of javascript to a given page. 

This leaves the potential of using one javascript file across multiple pages.

TESTING PULL REQUEST

Miny-PullRequestTesting
